#x<-geneticMds2(D,D)
#citiesMDS<-x[[2]][which(x[[2]]$i==1),c(3:4)]
citiesMDS<-as.data.frame(rotateMatrix(citiesMDS,1.026*pi))
names(citiesMDS)<-c('x','y')
#p <- plot_ly(data = citiesMDS, x = ~x, y = ~y,type='scatter',mode='markers',text=cities$city)
#p
citiesMDS$y<-citiesMDS$y-as.numeric(citiesMDS["Santiago",]$y)
citiesMDS$x<-citiesMDS$x-as.numeric(citiesMDS["Santiago",]$x)
citiesMDSgeo<-t(apply(citiesMDS,1,function(x) geoOffsetKm(-33.45,-70.667,x[1],x[2])))
citiesMDSgeo<-as.data.frame(citiesMDSgeo)
names(citiesMDSgeo)<-c('lat','lng')
citiesMDSgeo[1,]-cities[1,c('lat','lng')]
leaflet(data=cities)%>%
addTiles()%>%
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 1)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 1)
# geo styling
# g <- list(
#   scope = 'chile',
#   projection = list(type = 'santiago chile'),
#   showland = TRUE,
#   landcolor = toRGB("gray95"),
#   subunitcolor = toRGB("gray85"),
#   countrycolor = toRGB("gray85"),
#   countrywidth = 0.5,
#   subunitwidth = 0.5
# )
#
# p <- plot_geo(cities, lat = ~lat, lon = ~lng) %>%
#   add_markers(
#     text = ~city,
#     color = 'red', size = I(8), hoverinfo = "text"
#   ) %>%
#   add_markers(
#     lat=
#     text = ~city,
#     color = 'red', size = I(8), hoverinfo = "text"
#   ) %>%
#   layout(
#      geo = g
#   )
#
# p
leaflet(data=cities)%>%
#addTiles()%>%
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 1)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 1)
geo styling
g <- list(
scope = 'chile',
projection = list(type = 'santiago chile'),
showland = TRUE,
landcolor = toRGB("gray95"),
subunitcolor = toRGB("gray85"),
countrycolor = toRGB("gray85"),
countrywidth = 0.5,
subunitwidth = 0.5
)
p <- plot_geo(cities, lat = ~lat, lon = ~lng) %>%
add_markers(
text = ~city,
color = 'red', size = I(8), hoverinfo = "text"
) %>%
add_markers(
lat=
text = ~city,
color = 'red', size = I(8), hoverinfo = "text"
) %>%
layout(
geo = g
)
p
g <- list(
scope = 'chile',
projection = list(type = 'santiago chile'),
showland = TRUE,
landcolor = toRGB("gray95"),
subunitcolor = toRGB("gray85"),
countrycolor = toRGB("gray85"),
countrywidth = 0.5,
subunitwidth = 0.5
)
p <- plot_geo(cities, lat = ~lat, lon = ~lng) %>%
add_markers(
text = ~city,
color = 'red', size = I(8), hoverinfo = "text"
) %>%
add_markers(
lat=
text = ~city,
color = 'red', size = I(8), hoverinfo = "text"
) %>%
layout(
geo = g
)
p
p <- plot_geo(cities, lat = ~lat, lon = ~lng) %>%
add_markers(
text = ~city,
color = 'blue', size = I(8), hoverinfo = "text"
) %>%
add_markers(
data = citiesMDSgeo,
lat = ~lat
lon = ~lng
text = ~text,
color = 'red', size = I(8), hoverinfo = "text"
) %>%
layout(
geo = g
)
p
g <- list(
scope = 'chile',
projection = list(type = 'santiago chile'),
showland = TRUE,
landcolor = toRGB("gray95"),
subunitcolor = toRGB("gray85"),
countrycolor = toRGB("gray85"),
countrywidth = 0.5,
subunitwidth = 0.5
)
p <- plot_geo(cities, lat = ~lat, lon = ~lng) %>%
add_markers(
text = ~city,
color = 'blue', size = I(8), hoverinfo = "text"
) %>%
add_markers(
data = citiesMDSgeo,
lat = ~lat
lon = ~lng
text = ~text,
color = 'red', size = I(8), hoverinfo = "text"
) %>%
layout(
geo = g
)
p
library(plotly)
p <- plot_geo(cities, lat = ~lat, lon = ~lng) %>%
add_markers(
text = ~city,
color = 'blue', size = I(8), hoverinfo = "text"
) %>%
layout(
geo = g
)
p
g <- list(
scope = 'chile',
projection = list(type = 'santiago chile'),
showland = TRUE,
landcolor = toRGB("gray95"),
subunitcolor = toRGB("gray85"),
countrycolor = toRGB("gray85"),
countrywidth = 0.5,
subunitwidth = 0.5
)
p <- plot_geo(cities, lat = ~lat, lon = ~lng) %>%
add_markers(
text = ~city,
color = 'blue', size = I(8), hoverinfo = "text"
) %>%
layout(
geo = g
)
p
p <- plot_geo(cities, lat = ~lat, lon = ~lng) %>%
add_markers(
text = ~city,
size = I(8), hoverinfo = "text"
) %>%
layout(
geo = g
)
p
leaflet(data=cities)%>%
#addTiles()%>%
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 1)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 1)
leaflet(data=cities)%>%
addProviderTiles(providers$OpenStreetMap.CH)
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 1)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 1)
leaflet(data=cities)%>%
addProviderTiles(providers$OpenStreetMap.CH)%>%
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 1)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 1)
leaflet(data=cities)%>%
addProviderTiles(providers$OpenStreetMap.CH)%>%
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 1)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 3)
leaflet(data=cities)%>%
addProviderTiles(providers$OpenStreetMap.CH)%>%
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 3,color='black',fillOpacity = 1)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 3)
leaflet(data=cities)%>%
addProviderTiles(providers$OpenStreetMap.CH)%>%
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 3,color='black',fillOpacity = 1, stroke = false)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 3)
leaflet(data=cities)%>%
addProviderTiles(providers$OpenStreetMap.CH)%>%
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 3,color='black',fillOpacity = 1, stroke = false)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 3)FALSE
leaflet(data=cities)%>%
addProviderTiles(providers$OpenStreetMap.CH)%>%
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 3,color='black',fillOpacity = 1, stroke = FALSE)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 3)
leaflet(data=cities)%>%
addProviderTiles(providers$OpenStreetMap.CH)%>%
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 3,color='black',fillOpacity = 1, stroke = FALSE)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 3,fill = FALSE)
leaflet(data=cities)%>%
addProviderTiles(providers$OpenStreetMap.CH)%>%
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 1,color='black',fillOpacity = 1, stroke = FALSE)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 3,fill = FALSE)
leaflet(data=cities)%>%
addProviderTiles(providers$OpenStreetMap.CH)%>%
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 1,color='black',fillOpacity = 1, stroke = FALSE)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 2,fill = FALSE,weight=10)
leaflet(data=cities)%>%
addProviderTiles(providers$OpenStreetMap.CH)%>%
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 1,color='black',fillOpacity = 1, stroke = FALSE)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 2,fill = FALSE,weight=1)
leaflet(data=cities)%>%
addProviderTiles(providers$MapBox)%>%
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 1,color='black',fillOpacity = 1, stroke = FALSE)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 2,fill = FALSE,weight=1)
leaflet(data=cities)%>%
addProviderTiles(providers$JusticeMap.white)%>%
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 1,color='black',fillOpacity = 1, stroke = FALSE)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 2,fill = FALSE,weight=1)
leaflet(data=cities)%>%
addProviderTiles(providers$OpenStreetMap.BlackAndWhite)%>%
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 1,color='black',fillOpacity = 1, stroke = FALSE)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 2,fill = FALSE,weight=1)
data(worldcountries)
install('worldcountries')
install.packages('worldcountries')
install.packages('geojson')
geojsonio::geojson_read("Others/data/worldmap.json", what = "sp")
library(geojson)
geojsonio::geojson_read("Others/data/worldmap.json", what = "sp")
library(geojsonio)
install.packages('geojsonio')
library(geojsonio)
geojsonio::geojson_read("Others/data/worldmap.json", what = "sp")
wm<-geojsonio::geojson_read("Others/data/worldmap.json", what = "sp")
wm$id
wm[wm$id=='CHL']
wm[wm$id=='CHL',]
mapaChile<-wm[wm$id=='CHL',]
leaflet(mapaChile,data=cities)%>%
#addProviderTiles(providers$OpenStreetMap.BlackAndWhite)%>%
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 1,color='black',fillOpacity = 1, stroke = FALSE)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 2,fill = FALSE,weight=1)
wm[wm$id=='CHL',]
leaflet(mapaChile,data=cities)%>%
addProviderTiles(providers$OpenStreetMap.BlackAndWhite)%>%
addPolygons(mapaChile)%>%
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 1,color='black',fillOpacity = 1, stroke = FALSE)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 2,fill = FALSE,weight=1)
mapaChile[[coords]]
mapaChile[['coords']]
mapaChile
leaflet(data=cities)%>%
addProviderTiles(providers$OpenStreetMap.BlackAndWhite)%>%
addPolygons(mapaChile)%>%
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 1,color='black',fillOpacity = 1, stroke = FALSE)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 2,fill = FALSE,weight=1)
leaflet(data=cities)%>%
addProviderTiles(providers$OpenStreetMap.BlackAndWhite)%>%
addPolygons(data=mapaChile)%>%
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 1,color='black',fillOpacity = 1, stroke = FALSE)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 2,fill = FALSE,weight=1)
leaflet(data=cities)%>%
addProviderTiles(providers$Stamen.TonerLite)%>%
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 1,color='black',fillOpacity = 1, stroke = FALSE)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 2,fill = FALSE,weight=1)
leaflet(data=cities)%>%
addProviderTiles(providers$Stamen.TonerLite)%>%
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 2,color='black',fillOpacity = 1, stroke = FALSE)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 3,fill = FALSE,weight=2)
leaflet(data=cities)%>%
addProviderTiles(providers$Stamen.TonerLite)%>%
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 2,color='black',fillOpacity = 1, stroke = FALSE)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 3,fill = FALSE,weight=1)
leaflet(data=cities)%>%
addProviderTiles(providers$Stamen.Toner)%>%
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 2,color='black',fillOpacity = 1, stroke = FALSE)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 3,fill = FALSE,weight=1)
leaflet(data=cities)%>%
addProviderTiles(providers$Stamen.Watercolor)%>%
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 2,color='black',fillOpacity = 1, stroke = FALSE)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 3,fill = FALSE,weight=1)
leaflet(data=cities)%>%
addProviderTiles(providers$Stamen.TonerLines)%>%
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 2,color='black',fillOpacity = 1, stroke = FALSE)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 3,fill = FALSE,weight=1)
leaflet(data=cities)%>%
addProviderTiles(providers$OpenRailwayMap)%>%
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 2,color='black',fillOpacity = 1, stroke = FALSE)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 3,fill = FALSE,weight=1)
leaflet(data=cities)%>%
addProviderTiles(providers$OpenMapSurfer.AdminBounds)%>%
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 2,color='black',fillOpacity = 1, stroke = FALSE)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 3,fill = FALSE,weight=1)
leaflet(data=cities)%>%
addProviderTiles(providers$OpenStreetMap.DE)%>%
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 2,color='black',fillOpacity = 1, stroke = FALSE)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 3,fill = FALSE,weight=1)
leaflet(data=cities)%>%
addProviderTiles(providers$OpenStreetMap.DE)%>%
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 1,color='black',fillOpacity = 1, stroke = FALSE)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 3,fill = FALSE,weight=1)
leaflet(data=cities)%>%
addProviderTiles(providers$OpenStreetMap.DE)%>%
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 1,color='black',fillOpacity = 1, stroke = FALSE)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 2,fill = FALSE,weight=1)
leaflet(data=cities)%>%
addProviderTiles(providers$Thunderforest.SpinalMap)%>%
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 1,color='black',fillOpacity = 1, stroke = FALSE)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 2,fill = FALSE,weight=1)
leaflet(data=cities)%>%
addProviderTiles(providers$Hydda.Base)%>%
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 1,color='black',fillOpacity = 1, stroke = FALSE)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 2,fill = FALSE,weight=1)
leaflet(data=cities)%>%
addProviderTiles(providers$Stamen.TonerLite)%>%
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 1,color='black',fillOpacity = 1, stroke = FALSE)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 2,fill = FALSE,weight=1)
leaflet(data=cities)%>%
addProviderTiles(providers$Esri.WorldGrayCanvas)%>%
addCircleMarkers(lng=~lng,lat=~lat,label=~city,radius = 1,color='black',fillOpacity = 1, stroke = FALSE)%>%
addCircleMarkers(lng=citiesMDSgeo$lng,lat=citiesMDSgeo$lat,color='red',radius = 2,fill = FALSE,weight=1)
D
plotly(D,type='heatmap')
p<-plot_ly(D,type='heatmap')
p<-plot_ly(as.data.frame(D),type='heatmap')
p<-plot_ly(as.data.frame(as.matrix(D)),type='heatmap')
p
as.data.frame(as.matrix(D))
autoplot(D)
coldiss <- function(D, nc = 4, byrank = TRUE, diag = FALSE)
{
require(gclus)
if (max(D)>1) D <- D/max(D)
if (byrank) {
spe.color = dmat.color(1-D, cm.colors(nc))
}
else {
spe.color = dmat.color(1-D, byrank=FALSE, cm.colors(nc))
}
spe.o = order.single(1-D)
speo.color = spe.color[spe.o,spe.o]
op = par(mfrow=c(1,2), pty="s")
if (diag) {
plotcolors(spe.color, rlabels=attributes(D)$Labels,
main="Dissimilarity Matrix",
dlabels=attributes(D)$Labels)
plotcolors(speo.color, rlabels=attributes(D)$Labels[spe.o],
main="Ordered Dissimilarity Matrix",
dlabels=attributes(D)$Labels[spe.o])
}
else {
plotcolors(spe.color, rlabels=attributes(D)$Labels,
main="Dissimilarity Matrix")
plotcolors(speo.color, rlabels=attributes(D)$Labels[spe.o],
main="Ordered Dissimilarity Matrix")
}
par(op)
}
install.packages('gclus')
coldiss(D)
coldiss(D,byrank = FALSE)
coldiss(D,diag=TRUE)
coldiss(D,nc=2)
coldiss(D,nc=10)
coldiss(D,nc=50)
coldiss <- function(D, nc = 4, byrank = TRUE, diag = FALSE)
{
require(gclus)
if (max(D)>1) D <- D/max(D)
if (byrank) {
spe.color = dmat.color(1-D, cm.colors(nc))
}
else {
spe.color = dmat.color(1-D, byrank=FALSE, cm.colors(nc))
}
spe.o = order.single(1-D)
speo.color = spe.color[spe.o,spe.o]
op = par(mfrow=c(1,2), pty="s")
if (diag) {
plotcolors(spe.color, rlabels=attributes(D)$Labels,
main="Dissimilarity Matrix",
dlabels=attributes(D)$Labels)
plotcolors(speo.color, rlabels=attributes(D)$Labels[spe.o],
main="Ordered Dissimilarity Matrix",
dlabels=attributes(D)$Labels[spe.o])
}
else {
#plotcolors(spe.color, rlabels=attributes(D)$Labels,
#           main="Dissimilarity Matrix")
plotcolors(speo.color, rlabels=attributes(D)$Labels[spe.o],
main="Ordered Dissimilarity Matrix")
}
par(op)
}
coldiss(D,nc=50)
coldiss <- function(D, nc = 4, byrank = TRUE, diag = FALSE)
{
require(gclus)
if (max(D)>1) D <- D/max(D)
if (byrank) {
spe.color = dmat.color(1-D, cm.colors(nc))
}
else {
spe.color = dmat.color(1-D, byrank=FALSE, cm.colors(nc))
}
spe.o = order.single(1-D)
speo.color = spe.color[spe.o,spe.o]
op = par(mfrow=c(1), pty="s")
if (diag) {
plotcolors(spe.color, rlabels=attributes(D)$Labels,
main="Dissimilarity Matrix",
dlabels=attributes(D)$Labels)
plotcolors(speo.color, rlabels=attributes(D)$Labels[spe.o],
main="Ordered Dissimilarity Matrix",
dlabels=attributes(D)$Labels[spe.o])
}
else {
#plotcolors(spe.color, rlabels=attributes(D)$Labels,
#           main="Dissimilarity Matrix")
plotcolors(speo.color, rlabels=attributes(D)$Labels[spe.o],
main="Ordered Dissimilarity Matrix")
}
coldiss <- function(D, nc = 4, byrank = TRUE, diag = FALSE)
{
require(gclus)
if (max(D)>1) D <- D/max(D)
if (byrank) {
spe.color = dmat.color(1-D, cm.colors(nc))
}
else {
spe.color = dmat.color(1-D, byrank=FALSE, cm.colors(nc))
}
spe.o = order.single(1-D)
speo.color = spe.color[spe.o,spe.o]
op = par(mfrow=c(1), pty="s")
if (diag) {
plotcolors(spe.color, rlabels=attributes(D)$Labels,
main="Dissimilarity Matrix",
dlabels=attributes(D)$Labels)
plotcolors(speo.color, rlabels=attributes(D)$Labels[spe.o],
main="Ordered Dissimilarity Matrix",
dlabels=attributes(D)$Labels[spe.o])
}
else {
#plotcolors(spe.color, rlabels=attributes(D)$Labels,
#           main="Dissimilarity Matrix")
plotcolors(speo.color, rlabels=attributes(D)$Labels[spe.o],
main="Ordered Dissimilarity Matrix")
}
}
}
coldiss(D,nc=50)
coldiss(D,nc=50,diag=FALSE)
coldiss <- function(D, nc = 4, byrank = TRUE, diag = FALSE)
{
require(gclus)
if (max(D)>1) D <- D/max(D)
if (byrank) {
spe.color = dmat.color(1-D, cm.colors(nc))
}
else {
spe.color = dmat.color(1-D, byrank=FALSE, cm.colors(nc))
}
spe.o = order.single(1-D)
speo.color = spe.color[spe.o,spe.o]
op = par(mfrow=c(1,2), pty="s")
if (diag) {
plotcolors(spe.color, rlabels=attributes(D)$Labels,
main="Dissimilarity Matrix",
dlabels=attributes(D)$Labels)
plotcolors(speo.color, rlabels=attributes(D)$Labels[spe.o],
main="Ordered Dissimilarity Matrix",
dlabels=attributes(D)$Labels[spe.o])
}
else {
plotcolors(spe.color, rlabels=attributes(D)$Labels,
main="Dissimilarity Matrix")
plotcolors(speo.color, rlabels=attributes(D)$Labels[spe.o],
main="Ordered Dissimilarity Matrix")
}
par(op)
}
p<-plot_ly(as.data.frame(as.matrix(D)),type='heatmap')
p
p<-plot_ly(z=as.data.frame(as.matrix(D)),type='heatmap')
p
ç}
}
}
exit
ç
ç
}
}
}
}
p<-plot_ly(z=as.data.frame(as.matrix(D)),type='heatmap',x=)
z
